import '../mixin.drift';

fuzzySearchBotGroupUser:
SELECT u.* FROM users u
        WHERE (u.user_id in (SELECT m.user_id FROM messages m WHERE conversation_id = :conversationId AND m.created_at > :createdAt)
        OR u.user_id in (SELECT f.user_id FROM users f WHERE relationship = 'FRIEND'))
        AND u.user_id != :id
        AND (u.full_name LIKE '%' || :username || '%' ESCAPE '\' OR u.identity_number like '%' || :identityNumber || '%' ESCAPE '\')
        ORDER BY CASE u.relationship WHEN 'FRIEND' THEN 1 ELSE 2 END,
        u.relationship OR u.full_name = :username COLLATE NOCASE OR u.identity_number = :identityNumber COLLATE NOCASE DESC;

fuzzySearchGroupUser:
SELECT u.* FROM participants p, users u
        WHERE u.user_id != :id
        AND p.conversation_id = :conversationId AND p.user_id = u.user_id
        AND (u.full_name LIKE '%' || :username || '%'  ESCAPE '\' OR u.identity_number like '%' || :identityNumber || '%'  ESCAPE '\')
        ORDER BY u.full_name = :username COLLATE NOCASE OR u.identity_number = :identityNumber COLLATE NOCASE DESC;

groupParticipants:
SELECT u.* FROM participants p, users u WHERE p.conversation_id = :conversationId AND p.user_id = u.user_id;

notInFriends:
SELECT * FROM users WHERE relationship = 'FRIEND' AND user_id NOT IN :filterIds ORDER BY full_name, user_id ASC;

usersByIn:
SELECT * FROM users WHERE user_id IN :userIds;

userIdsByIn:
SELECT user_id FROM users WHERE user_id IN :userIds;

fuzzySearchUser:
SELECT users.*
FROM users
         LEFT JOIN conversations ON conversations.owner_id = user_id
WHERE conversations.status IS NULL AND user_id != :id AND relationship = 'FRIEND' AND
    (full_name LIKE '%' || :username || '%' ESCAPE '\'
        OR identity_number LIKE '%' || :identityNumber || '%' ESCAPE '\')
ORDER BY full_name = :username COLLATE nocase
    OR identity_number = :identityNumber COLLATE nocase DESC;

biographyByIdentityNumber:
SELECT biography FROM users WHERE user_id = :user_id;

userByIdentityNumbers AS MentionUser:
SELECT user_id, identity_number, full_name FROM users WHERE identity_number IN :numbers;
